<Page x:Class="StoreApplication.Pages.ListContracts"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:StoreApplication.Pages"
      mc:Ignorable="d" 
      d:DesignHeight="700" d:DesignWidth="550"
      Title="ListContracts"
      Loaded="Load">


    <Page.Resources>

        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />

        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="Transparent" />
                                <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="Transparent" />
                                <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ColumnHeaderStyle1" TargetType="DataGridColumnHeader">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Background" Value="DarkBlue"/>
            <Setter Property="Foreground" Value="AntiqueWhite"/>
            <Setter Property="FontSize" Value="12" />
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="ToolTip" Value="Click to sort."/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="GridStyle" TargetType="DataGrid">
            <!-- Make the border and grid lines a little less imposing -->
            <Setter Property="BorderBrush" Value="Beige" />
            <Setter Property="HorizontalGridLinesBrush" Value="Bisque" />
            <Setter Property="VerticalGridLinesBrush" Value="Bisque" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="ColumnHeaderStyle" Value="{DynamicResource ColumnHeaderStyle1}"/>

            <Setter Property="RowStyle">
                <Setter.Value>
                    <Style TargetType="DataGridRow">
                        <Style.Triggers>
                            <!-- Highlight a grid row as the mouse passes over -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Bisque" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="CellStyle">
                <Setter.Value>
                    <Style TargetType="DataGridCell">
                        <Style.Triggers>
                            <!-- Highlight selected rows -->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#ff66ccff" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                            <Trigger Property="Background" Value="DarkCyan"/>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Background" Value="#ff66ccff" />
                                <Setter Property="BorderBrush" Value="Black" />
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                            
                        </Style.Triggers>
                        
                        <!-- Add some padding around the contents of a cell -->
                        <Setter Property="Padding" Value="4,3,4,3" />
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="DataGridCell">
                                    <Border Padding="{TemplateBinding Padding}" 
                                            BorderBrush="AntiqueWhite"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="DarkCyan">
                                        <ContentPresenter />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="FocusVisualStyle">
                            <Setter.Value>
                                <Style TargetType="Control">
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                </Style>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

    </Page.Resources>


    <Grid>
        <Button Width="50" Height="50" Style="{StaticResource ButtonStyle1}" Click="GoBack" Cursor="Hand" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10 10 0 0">
            <Image Source="/Images/Back.png"/>
        </Button>

        <StackPanel Orientation="Horizontal" VerticalAlignment="Top" Height="40" Width="330" Margin="0 40 0 0">
            <TextBlock FontSize="20" VerticalAlignment="Center" Foreground="AntiqueWhite">Contract</TextBlock>
            <TextBox x:Name="SearchingField" Background="Transparent" MaxLength="10" Width="200" FontSize="20" Foreground="AntiqueWhite" Margin="10 0 0 0" VerticalAlignment="Center" BorderBrush="White"></TextBox>
            <Button Style="{StaticResource ButtonStyle1}" Margin="10 0 0 0" Height="35" Cursor="Hand" Click="Search">
                <Image Source="../Images/Search.png"/>
            </Button>
        </StackPanel>

        <DataGrid Width="400" Height="550" Margin="0 60 0 0" Style="{StaticResource GridStyle}"  Background="DarkBlue" Name="dataList" AutoGenerateColumns="False">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Id" Width="*" Binding="{Binding Path=CONTRACT_NUMBER , Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Customer" Width="*" Binding="{Binding Path=CUSTOMER_ID , Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Date" Width="*" Binding="{Binding Path=DATA , Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Product" Width="*" Binding="{Binding Path=PRODUCT_TYPE , Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Amount" Width="*" Binding="{Binding Path=AMOUNT , Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
            </DataGrid.Columns>
        </DataGrid>

    </Grid>
</Page>
